name: Java CI/CD with Docker

on:
  push:
    branches: ["**"]

jobs:
  # 🔹 Job 1: Lint
  lint:
    name: 🔎 Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - run: mvn checkstyle:check

  # 🔹 Job 2: Tests + Coverage (≥90%)
  test:
    name: 🧪 Tests + Coverage
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - run: mvn -B clean verify

  # 🔹 Job 3: Build
  build:
    name: 📦 Build JAR
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - run: mvn -B package -DskipTests
      - uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

  # 🔹 Job 4: Docker SIMPLIFICADO
  docker:
    name: 🐳 Docker Test
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: 📥 Install Maven manually (force install)
        run: |
          # Forzar instalación de Maven en el contenedor
          sudo apt-get update
          sudo apt-get install -y maven
          mvn -version

      - name: 🏗️ Build with Maven inside container
        run: |
          # Compilar dentro del contenedor para demostrar que funciona
          mvn clean package -DskipTests
          ls -la target/
          echo "✅ Build successful inside container environment"

      - name: 🔨 Build Docker image
        run: |
          docker build -t mini-banco:latest .
          echo "✅ Docker image built"

      - name: 🧪 Test Docker container (SIMPLIFIED)
        run: |
          # Ejecutar y verificar que el contenedor inicia correctamente
          echo "🚀 Starting container..."
          docker run --rm --name test-container mini-banco:latest &
          CONTAINER_PID=$!
          
          # Esperar un poco y verificar que el proceso Java está corriendo
          sleep 5
          
          if docker ps | grep -q "test-container"; then
            echo "✅ Container is running"
            echo "📝 Container logs:"
            docker logs test-container || true
          else
            echo "❌ Container failed to start"
            exit 1
          fi
          
          # Limpiar
          docker stop test-container || true