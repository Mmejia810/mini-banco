name: Java CI/CD with Docker

on:
  push:
    branches: ["**"]

jobs:
  # üîπ Job 1: Lint
  lint:
    name: üîé Lint (Checkstyle)
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: ‚òï Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: üîç Run Checkstyle
        run: mvn checkstyle:check

  # üîπ Job 2: Tests + Coverage (‚â•90%)
  test:
    name: üß™ Tests + Coverage
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: ‚òï Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: üß™ Run Tests with Coverage
        run: mvn clean verify

      - name: üìä Upload Coverage Reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/site/jacoco/

  # üîπ Job 3: Build JAR
  build:
    name: üì¶ Build JAR
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: ‚òï Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: üì¶ Build JAR
        run: mvn clean package -DskipTests

      - name: üì§ Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

  # üîπ Job 4: Docker Build & Test
  docker:
    name: üê≥ Docker Build & Test
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: ‚òï Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: üì¶ Build JAR for Docker
        run: mvn clean package -DskipTests

      - name: üê≥ Build Docker Image
        run: docker build -t mini-banco:latest .

      - name: üß™ Test Docker Container
        run: |
          echo "üöÄ Running Docker container..."
          OUTPUT=$(docker run --rm mini-banco:latest 2>&1)
          echo "$OUTPUT"

          if echo "$OUTPUT" | grep -q "Application finished successfully"; then
            echo "‚úÖ Docker test PASSED"
          else
            echo "‚ùå Docker test FAILED"
            exit 1
          fi