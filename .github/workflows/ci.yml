name: Java CI with Maven + Docker

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  lint:
    name: 🔎 Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - name: Run Checkstyle
        run: mvn checkstyle:check

  test:
    name: 🧪 Tests + Coverage (≥90%)
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Run tests with coverage validation
        run: |
          mvn clean verify
          echo "✅ Coverage check passed (≥90%)"
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/site/jacoco/

  build:
    name: 📦 Build JAR
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - name: Package application
        run: mvn clean package -DskipTests
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: mini-banco-jar
          path: target/app.jar

  docker:
    name: 🐳 Docker Build & Test
    runs-on: ubuntu-latest
    needs: test  # Solo depende de test, no de build (mejor práctica)
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t mini-banco:latest .
      - name: Test Docker container
        run: |
          docker run -d -p 8080:8080 --name mini-banco-container mini-banco:latest
          sleep 10  # Esperar que la app inicie
          
          # Verificar que el contenedor está corriendo
          if docker ps | grep -q mini-banco-container; then
            echo "✅ Contenedor ejecutándose correctamente"
            docker stop mini-banco-container
          else
            echo "❌ El contenedor no se está ejecutando"
            exit 1
          fi